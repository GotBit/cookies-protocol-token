/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CookiesProtocol,
  CookiesProtocolInterface,
} from "../CookiesProtocol";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "antisnipe",
    outputs: [
      {
        internalType: "contract IAntisnipe",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "antisnipeDisable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setAntisnipeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setAntisnipeDisable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "timestamps",
        type: "uint256[]",
      },
    ],
    name: "setUnlockTimes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280601081526020016f10dbdbdada595cc8141c9bdd1bd8dbdb60821b81525060405180604001604052806002815260200161043560f41b8152508160039081620000679190620003b5565b506004620000768282620003b5565b505050620000936200008d620000b360201b60201c565b620000b7565b620000ad336d04ee2d6d415b85acef810000000062000109565b620004a8565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001655760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b620001736000838362000200565b806002600082825462000187919062000481565b90915550506001600160a01b03821660009081526020819052604081208054839290620001b690849062000481565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0383166000908152600660205260409020544210156200026a5760405162461bcd60e51b815260206004820152601760248201527f53656e6465722077616c6c6574206973206c6f636b656400000000000000000060448201526064016200015c565b600754600160a01b900460ff161580156200028f57506007546001600160a01b031615155b156200030c57600754604051635d37a8dd60e01b81523360048201526001600160a01b03858116602483015284811660448301526064820184905290911690635d37a8dd90608401600060405180830381600087803b158015620002f257600080fd5b505af115801562000307573d6000803e3d6000fd5b505050505b505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200033c57607f821691505b6020821081036200035d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200030c57600081815260208120601f850160051c810160208610156200038c5750805b601f850160051c820191505b81811015620003ad5782815560010162000398565b505050505050565b81516001600160401b03811115620003d157620003d162000311565b620003e981620003e2845462000327565b8462000363565b602080601f831160018114620004215760008415620004085750858301515b600019600386901b1c1916600185901b178555620003ad565b600085815260208120601f198616915b82811015620004525788860151825594840194600190910190840162000431565b5085821015620004715787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008219821115620004a357634e487b7160e01b600052601160045260246000fd5b500190565b61120c80620004b86000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806374654904116100b857806395d89b411161007c57806395d89b41146102a5578063a457c2d7146102ad578063a9059cbb146102c0578063dd62ed3e146102d3578063e1e144de146102e6578063f2fde38b146102fa57600080fd5b8063746549041461023b57806374fb20e11461024e57806379cc679014610256578063882cfb3f146102695780638da5cb5b1461029457600080fd5b8063395093511161010a57806339509351146101bc57806340c10f19146101cf57806342966c68146101e4578063611bf629146101f757806370a082311461020a578063715018a61461023357600080fd5b806306fdde0314610147578063095ea7b31461016557806318160ddd1461018857806323b872dd1461019a578063313ce567146101ad575b600080fd5b61014f61030d565b60405161015c9190610ef6565b60405180910390f35b610178610173366004610f67565b61039f565b604051901515815260200161015c565b6002545b60405190815260200161015c565b6101786101a8366004610f91565b6103b7565b6040516012815260200161015c565b6101786101ca366004610f67565b6103db565b6101e26101dd366004610f67565b6103fd565b005b6101e26101f2366004610fcd565b61043e565b6101e2610205366004610fe6565b61044b565b61018c610218366004610fe6565b6001600160a01b031660009081526020819052604090205490565b6101e2610497565b6101e2610249366004611054565b6104cd565b6101e261061a565b6101e2610264366004610f67565b610670565b60075461027c906001600160a01b031681565b6040516001600160a01b03909116815260200161015c565b6005546001600160a01b031661027c565b61014f610685565b6101786102bb366004610f67565b610694565b6101786102ce366004610f67565b61070f565b61018c6102e13660046110c0565b61071d565b60075461017890600160a01b900460ff1681565b6101e2610308366004610fe6565b610748565b60606003805461031c906110f3565b80601f0160208091040260200160405190810160405280929190818152602001828054610348906110f3565b80156103955780601f1061036a57610100808354040283529160200191610395565b820191906000526020600020905b81548152906001019060200180831161037857829003601f168201915b5050505050905090565b6000336103ad8185856107e0565b5060019392505050565b6000336103c5858285610905565b6103d085858561097f565b506001949350505050565b6000336103ad8185856103ee838361071d565b6103f89190611143565b6107e0565b6005546001600160a01b031633146104305760405162461bcd60e51b81526004016104279061115b565b60405180910390fd5b61043a8282610b58565b5050565b6104483382610c43565b50565b6005546001600160a01b031633146104755760405162461bcd60e51b81526004016104279061115b565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b031633146104c15760405162461bcd60e51b81526004016104279061115b565b6104cb6000610d9a565b565b6005546001600160a01b031633146104f75760405162461bcd60e51b81526004016104279061115b565b61012c8311156105495760405162461bcd60e51b815260206004820152601a60248201527f546f6f206d75636820656c656d656e747320696e2061727261790000000000006044820152606401610427565b8083146105985760405162461bcd60e51b815260206004820152601960248201527f446966666572656e742073697a6573206f6620617272617973000000000000006044820152606401610427565b8260005b81811015610612578383828181106105b6576105b6611190565b90506020020135600660008888858181106105d3576105d3611190565b90506020020160208101906105e89190610fe6565b6001600160a01b0316815260208101919091526040016000205561060b816111a6565b905061059c565b505050505050565b6005546001600160a01b031633146106445760405162461bcd60e51b81526004016104279061115b565b600754600160a01b900460ff161561065b57600080fd5b6007805460ff60a01b1916600160a01b179055565b61067b823383610905565b61043a8282610c43565b60606004805461031c906110f3565b600033816106a2828661071d565b9050838110156107025760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610427565b6103d082868684036107e0565b6000336103ad81858561097f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005546001600160a01b031633146107725760405162461bcd60e51b81526004016104279061115b565b6001600160a01b0381166107d75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610427565b61044881610d9a565b6001600160a01b0383166108425760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610427565b6001600160a01b0382166108a35760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610427565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610911848461071d565b90506000198114610979578181101561096c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610427565b61097984848484036107e0565b50505050565b6001600160a01b0383166109e35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610427565b6001600160a01b038216610a455760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610427565b610a50838383610dec565b6001600160a01b03831660009081526020819052604090205481811015610ac85760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610427565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610aff908490611143565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b4b91815260200190565b60405180910390a3610979565b6001600160a01b038216610bae5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610427565b610bba60008383610dec565b8060026000828254610bcc9190611143565b90915550506001600160a01b03821660009081526020819052604081208054839290610bf9908490611143565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610ca35760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610427565b610caf82600083610dec565b6001600160a01b03821660009081526020819052604090205481811015610d235760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610427565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610d529084906111bf565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016108f8565b505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038316600090815260066020526040902054421015610e545760405162461bcd60e51b815260206004820152601760248201527f53656e6465722077616c6c6574206973206c6f636b65640000000000000000006044820152606401610427565b600754600160a01b900460ff16158015610e7857506007546001600160a01b031615155b15610d9557600754604051635d37a8dd60e01b81523360048201526001600160a01b03858116602483015284811660448301526064820184905290911690635d37a8dd90608401600060405180830381600087803b158015610ed957600080fd5b505af1158015610eed573d6000803e3d6000fd5b50505050505050565b600060208083528351808285015260005b81811015610f2357858101830151858201604001528201610f07565b81811115610f35576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610f6257600080fd5b919050565b60008060408385031215610f7a57600080fd5b610f8383610f4b565b946020939093013593505050565b600080600060608486031215610fa657600080fd5b610faf84610f4b565b9250610fbd60208501610f4b565b9150604084013590509250925092565b600060208284031215610fdf57600080fd5b5035919050565b600060208284031215610ff857600080fd5b61100182610f4b565b9392505050565b60008083601f84011261101a57600080fd5b50813567ffffffffffffffff81111561103257600080fd5b6020830191508360208260051b850101111561104d57600080fd5b9250929050565b6000806000806040858703121561106a57600080fd5b843567ffffffffffffffff8082111561108257600080fd5b61108e88838901611008565b909650945060208701359150808211156110a757600080fd5b506110b487828801611008565b95989497509550505050565b600080604083850312156110d357600080fd5b6110dc83610f4b565b91506110ea60208401610f4b565b90509250929050565b600181811c9082168061110757607f821691505b60208210810361112757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156111565761115661112d565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000600182016111b8576111b861112d565b5060010190565b6000828210156111d1576111d161112d565b50039056fea264697066735822122001339086c28bc65ec82d7d8433397f0ca9ec33faf0693f61a4d27bcdfdbd4ddf64736f6c634300080f0033";

export class CookiesProtocol__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CookiesProtocol> {
    return super.deploy(overrides || {}) as Promise<CookiesProtocol>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CookiesProtocol {
    return super.attach(address) as CookiesProtocol;
  }
  connect(signer: Signer): CookiesProtocol__factory {
    return super.connect(signer) as CookiesProtocol__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CookiesProtocolInterface {
    return new utils.Interface(_abi) as CookiesProtocolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CookiesProtocol {
    return new Contract(address, _abi, signerOrProvider) as CookiesProtocol;
  }
}
